name: CI Pipeline - Test and Build

# Controls when the workflow will run
on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      # Step 4: Install dependencies using the lock file
      - name: Install dependencies
        run: poetry install --no-root

      # Step 5: Run tests with pytest
      - name: Run tests
        run: poetry run pytest

  build:
    # This job will only run if the 'test' job completes successfully
    needs: test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks-out your repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: docker build -t anomaly-detection-api:latest .
