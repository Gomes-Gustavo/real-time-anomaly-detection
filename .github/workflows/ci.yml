name: CI Pipeline - Train, Test and Build

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We must fetch the LFS files
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Install all dependencies (including dev)
        run: poetry install --no-root

      - name: Train model by running the notebook
        # This step runs the training notebook and generates the model file
        run: |
          poetry run pip install ipykernel
          poetry run jupyter nbconvert --to notebook --execute notebooks/02-Baseline-Model-Training.ipynb

      - name: Run tests with pytest
        run: poetry run pytest

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t anomaly-detection-api:latest .
