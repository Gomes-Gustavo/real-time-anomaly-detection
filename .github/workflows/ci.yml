name: CI Pipeline - Test, Build and Release Validation

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --only main

      - name: Create models directory
        run: mkdir -p models

      - name: Download model artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Gomes-Gustavo/real-time-anomaly-detection'
          file: 'isolation_forest_baseline_v1.joblib'
          target: 'models/isolation_forest_baseline_v1.joblib'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests with pytest
        run: poetry run pytest

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download model artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Gomes-Gustavo/real-time-anomaly-detection'
          file: 'isolation_forest_baseline_v1.joblib'
          target: 'models/isolation_forest_baseline_v1.joblib'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t anomaly-detection-api:latest .
